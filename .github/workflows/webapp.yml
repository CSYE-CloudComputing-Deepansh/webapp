name: Node.js Integration Tests with PostgreSQL

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres       
          POSTGRES_PASSWORD: password    
          POSTGRES_DB: postgres          
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Create .env file with secrets in the root folder
        run: |
          echo "DB_CONN_STRING=postgres:" > .env
          echo "DB_NAME=assignment">> .env
          echo "DB_USERNAME=dbuser" >> .env
          echo "DB_PASSWORD=password" >> .env
          echo "DB_INSTANCE=localhost:5432" >> .env

      - name: Print current directory and list files
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in the current directory:"
          ls -la

      - name: Print .env file for debugging
        run: cat .env

      - name: Source .env file and print environment variables
        run: |
          set -o allexport
          source .env
          set +o allexport
          echo "DB_CONN_STRING=$DB_CONN_STRING"
          echo "DB_NAME=$DB_NAME"
          echo "DB_USERNAME=$DB_USERNAME"
          echo "DB_PASSWORD=$DB_PASSWORD"
          echo "DB_INSTANCE=$DB_INSTANCE"

      - name: Run integration tests
        env:
          NODE_ENV: ci  # Optional: to differentiate between CI and other environments
        run: |
          echo "Running integration tests..."
          npm test
